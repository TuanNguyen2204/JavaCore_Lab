/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package assignment2;

import static assignment2.InteratorRead.getAllUsers;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author dell
 */
public class EmployeeManagementJFame extends javax.swing.JFrame {

    private Emloyee currentEmployee;

    /**
     * Creates new form EmployeeManagement
     */
    public EmployeeManagementJFame(Emloyee emloyee) {
        initComponents();
        currentEmployee = emloyee;
        insertDataIntoform(currentEmployee);
    }

    public EmployeeManagementJFame() {
        initComponents();
    }

    public void insertDataIntoform(Emloyee emloyee) {
        jtfID.setText(emloyee.getEmployeeNo());
        jtfName.setText(emloyee.getName());
        jtfDob.setText(emloyee.getDate());
        jtfEmail.setText(emloyee.getEmail());
        jtfPhone.setText(String.valueOf(emloyee.getPhone()));
        jAreaPOWork.setText(emloyee.getPlaceOfWord());
        jtfAddress.setText(emloyee.getAddress());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbID = new javax.swing.JLabel();
        lbName = new javax.swing.JLabel();
        lbDob = new javax.swing.JLabel();
        lbAdress = new javax.swing.JLabel();
        lbEmail = new javax.swing.JLabel();
        lbPhone = new javax.swing.JLabel();
        jbPlaceOfWork = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jAreaPOWork = new javax.swing.JTextArea();
        jtfName = new javax.swing.JTextField();
        jtfDob = new javax.swing.JTextField();
        jtfAddress = new javax.swing.JTextField();
        jtfEmail = new javax.swing.JTextField();
        jtfPhone = new javax.swing.JTextField();
        jtfID = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnShow = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        lbcheck = new javax.swing.JLabel();
        jbcheckPhone = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jbID.setText("ID");

        lbName.setText("Name");

        lbDob.setText("DOB");

        lbAdress.setText("Adress");

        lbEmail.setText("Email");

        lbPhone.setText("Phone");

        jbPlaceOfWork.setText("Place Of Work");

        jAreaPOWork.setColumns(10);
        jAreaPOWork.setRows(3);
        jAreaPOWork.setTabSize(3);
        jScrollPane1.setViewportView(jAreaPOWork);

        jtfName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfNameMouseClicked(evt);
            }
        });

        jtfDob.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfDobMouseClicked(evt);
            }
        });
        jtfDob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfDobActionPerformed(evt);
            }
        });

        jtfAddress.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfAddressMouseClicked(evt);
            }
        });
        jtfAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfAddressActionPerformed(evt);
            }
        });

        jtfEmail.setToolTipText("");
        jtfEmail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfEmailMouseClicked(evt);
            }
        });
        jtfEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfEmailActionPerformed(evt);
            }
        });

        jtfPhone.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfPhoneMouseClicked(evt);
            }
        });
        jtfPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfPhoneKeyReleased(evt);
            }
        });

        jtfID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfIDMouseClicked(evt);
            }
        });

        btnAdd.setText("Add New");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnShow.setText("Show");
        btnShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        jbcheckPhone.setBackground(new java.awt.Color(255, 51, 51));

        jLabel1.setText("IS1403_HE103537_NguyenVanNam");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jbPlaceOfWork)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lbcheck)
                                .addGap(152, 152, 152))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbEmail)
                                    .addComponent(lbPhone))
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jbcheckPhone)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jtfEmail)
                                    .addComponent(jtfPhone)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lbDob)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(9, 9, 9)
                                                .addComponent(jbID)))
                                        .addGap(24, 24, 24))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lbName)
                                        .addGap(18, 18, 18)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfDob)
                                    .addComponent(jtfName)
                                    .addComponent(jtfID)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbAdress)
                                .addGap(18, 18, 18)
                                .addComponent(jtfAddress)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnShow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(162, 162, 162))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbID)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jtfID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnAdd)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbName)
                    .addComponent(btnUpdate))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfDob, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbDob)
                    .addComponent(btnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbAdress)
                    .addComponent(btnSearch))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(lbEmail))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnShow))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbcheckPhone)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbPhone)
                    .addComponent(jtfPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExit))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                        .addComponent(lbcheck)
                        .addGap(88, 88, 88))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jbPlaceOfWork)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfDobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfDobActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfDobActionPerformed

    private void jtfAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfAddressActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
                    try {
            // TODO add your handling code here:
            int count = 0;
            boolean ischeck = false;
            List<Emloyee> employees = getAllUsers();
            String email = jtfEmail.getText().toString();
            int phone = Integer.parseInt(jtfPhone.getText().toString());
            String address = jtfAddress.getText().toString();
            String placeOfWork = jAreaPOWork.getText().toString();
            String name = jtfName.getText().toString();
            String id = jtfID.getText().toString();

            String format = "yyyy-MM-dd";
            SimpleDateFormat sdf = new SimpleDateFormat(format);
            sdf.setLenient(false);
            String date = jtfDob.getText().toString();
            Date date1 = sdf.parse(date);

            if (!email.contains("@")) {
                JOptionPane.showMessageDialog(null, "Wrong  Email");
                count ++;
            }           
            else if (!sdf.format(date1).equals(date)) {
                JOptionPane.showMessageDialog(null, "not a valid format for yyyy-MM-dd");
                count ++;
                throw new ParseException(date + " is not a valid format for " + format, 0);
                
            } 
            else if (!id.startsWith("E") || id.length() < 3) {
                JOptionPane.showMessageDialog(null, "Wrong Id");
                count ++;
            }
            
            if(count ==0){
                 for (Emloyee emloyee : employees) {
                    if (emloyee.getEmployeeNo().equalsIgnoreCase(id)) {
                        emloyee.setEmployeeNo(id);
                        emloyee.setAddress(address);
                        emloyee.setDate(date);
                        emloyee.setEmail(email);
                        emloyee.setName(name);
                        emloyee.setPhone(phone);
                        emloyee.setPlaceOfWord(placeOfWork);
                        JOptionPane.showMessageDialog(null, "Update sucess");
                        InteratorWrite.writeEmployeeXML(employees);
                         ischeck = true;
                        break;
                       
                    }
                }
            
            }        
            if (count ==0 && ischeck ==false){
                 JOptionPane.showMessageDialog(null, "Employee isn't exist to update");
            }
            
            
              
           

        } catch (ParseException ex) {

            JOptionPane.showMessageDialog(null, "  not a valid format for yyyy-MM-dd");
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowActionPerformed
        new ShowJFame().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnShowActionPerformed

    private void jtfPhoneKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPhoneKeyReleased
        String value = jtfPhone.getText();
        int length = value.length();
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {
            jbcheckPhone.setText("");
        } else {
            jbcheckPhone.setText("Enter only numeric digits(0-9)");

        }
        if (length >= 11) {
            jbcheckPhone.setText("Enter legnth of phone <= 11");
        }


    }//GEN-LAST:event_jtfPhoneKeyReleased

    private void jtfEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfEmailActionPerformed

    }//GEN-LAST:event_jtfEmailActionPerformed

    private void jtfEmailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfEmailMouseClicked
        jtfEmail.setText("");
    }//GEN-LAST:event_jtfEmailMouseClicked

    private void jtfPhoneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfPhoneMouseClicked
        jtfPhone.setText("");
    }//GEN-LAST:event_jtfPhoneMouseClicked

    private void jtfAddressMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfAddressMouseClicked
        // TODO add your handling code here:
        jtfAddress.setText("");
    }//GEN-LAST:event_jtfAddressMouseClicked

    private void jtfDobMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfDobMouseClicked
        jtfDob.setText("");
    }//GEN-LAST:event_jtfDobMouseClicked

    private void jtfNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfNameMouseClicked
        // TODO add your handling code here:
        jtfName.setText("");
    }//GEN-LAST:event_jtfNameMouseClicked

    private void jtfIDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfIDMouseClicked
        // TODO add your handling code here:
        jtfID.setText("");
    }//GEN-LAST:event_jtfIDMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try {
            // TODO add your handling code here:
            int count = 0;
            boolean ischeck = false;
            List<Emloyee> employees = getAllUsers();
            String email = jtfEmail.getText().toString();
            int phone = Integer.parseInt(jtfPhone.getText().toString());
            String address = jtfAddress.getText().toString();
            String placeOfWork = jAreaPOWork.getText().toString();
            String name = jtfName.getText().toString();
            String id = jtfID.getText().toString();

            String format = "yyyy-MM-dd";
            SimpleDateFormat sdf = new SimpleDateFormat(format);
            sdf.setLenient(false);
            String date = jtfDob.getText().toString();
            Date date1 = sdf.parse(date);

            if (!email.contains("@")) {
                JOptionPane.showMessageDialog(null, "Wrong  Email");
                count ++;
            } else if (!sdf.format(date1).equals(date)) {
                JOptionPane.showMessageDialog(null, "not a valid format for yyyy-MM-dd");
                count ++;
                throw new ParseException(date + " is not a valid format for " + format, 0);
                
            } else if (!id.startsWith("E") || id.length() < 3) {
                JOptionPane.showMessageDialog(null, "Wrong Id");
                count ++;
            }
            
            if(count ==0){
                 for (Emloyee emloyee : employees) {
                    if (emloyee.getEmployeeNo().equalsIgnoreCase(id)) {
                        JOptionPane.showMessageDialog(null, "Employee already exist");
                        ischeck=true;
                        break;
                    }
                }
            
            }        
            if (count ==0 && ischeck ==false){
                  Emloyee employee = new Emloyee(id, name, date, address, email, phone, placeOfWork);
                employees.add(employee);
                InteratorWrite.writeEmployeeXML(employees);
                JOptionPane.showMessageDialog(null, "Add sucess");
            }
            
            
              
           

        } catch (ParseException ex) {

            JOptionPane.showMessageDialog(null, " not a valid format for yyyy-MM-dd");
            ex.printStackTrace();
        }

    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String id = jtfID.getText().toString();
        int counter = 0;
        List<Emloyee> employees = InteratorRead.getAllUsers();
        for (int i = 0; i < employees.size(); i++) {
            if (id.equalsIgnoreCase(employees.get(i).employeeNo)) {
                counter++;
                employees.remove(employees.get(i));
            }
        }
     
        if (counter == 0) {
            JOptionPane.showMessageDialog(null, "Not Found Emloyee to delete");
        }
        else{
               InteratorWrite.writeEmployeeXML(employees);
        System.out.println(employees);
        JOptionPane.showMessageDialog(null, "Detete sucess full");
        }


    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        boolean isCheck = false;
        String id = jtfID.getText().toString();
        String name = jtfName.getText().toString();
        List<Emloyee> currentEmloyee = new ArrayList<>();
        if (!id.isEmpty() && !name.isEmpty()) {
            List<Emloyee> emloyees = InteratorRead.getAllUsers();
            for (Emloyee emloyee : emloyees) {
                if (emloyee.getEmployeeNo().equals(id) && emloyee.getName().contains(name)) {
                    currentEmloyee.add(emloyee);
                    new ShowJFame(currentEmloyee).setVisible(true);
                    dispose();;
                    isCheck = true;
                }
            }
        } else if (!id.isEmpty() && name.isEmpty()) {
            List<Emloyee> emloyees = InteratorRead.getAllUsers();
            for (Emloyee emloyee : emloyees) {
                if (emloyee.getEmployeeNo().equals(id)) {
                    currentEmloyee.add(emloyee);
                    new ShowJFame(currentEmloyee).setVisible(true);
                    dispose();
                    isCheck = true;
                }
            }
        } else if (id.isEmpty() && !name.isEmpty()) {
            List<Emloyee> emloyees = InteratorRead.getAllUsers();
            for (Emloyee emloyee : emloyees) {
                if (emloyee.getName().contains(name)) {
                    currentEmloyee.add(emloyee);
                    new ShowJFame(currentEmloyee).setVisible(true);
                    dispose();;
                    isCheck = true;
                }
            }
        }
        
        else {
            JOptionPane.showMessageDialog(null, "Filed ID or Name not blank");
        }
       if (isCheck == false){
            JOptionPane.showMessageDialog(null, "Employee isn't exist");
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeManagementJFame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeManagementJFame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeManagementJFame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeManagementJFame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeManagementJFame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnShow;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JTextArea jAreaPOWork;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jbID;
    private javax.swing.JLabel jbPlaceOfWork;
    private javax.swing.JLabel jbcheckPhone;
    private javax.swing.JTextField jtfAddress;
    private javax.swing.JTextField jtfDob;
    private javax.swing.JTextField jtfEmail;
    private javax.swing.JTextField jtfID;
    private javax.swing.JTextField jtfName;
    private javax.swing.JTextField jtfPhone;
    private javax.swing.JLabel lbAdress;
    private javax.swing.JLabel lbDob;
    private javax.swing.JLabel lbEmail;
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lbPhone;
    private javax.swing.JLabel lbcheck;
    // End of variables declaration//GEN-END:variables
}
